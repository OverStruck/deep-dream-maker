[uwsgi]
protocol = uwsgi
module = main
callable = api
socket = 0.0.0.0:5000

strict = true
master = true
enable-threads = true
vacuum = true               ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true          ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

disable-logging = true
log-4xx = true
log-5xx = true

; This configuration will restart a worker process after any of the following events:
; 1000 requests have been handled
; The worker has allocated 2 GB of memory
; 1 hour has passed

max-requests = 1000         ; Restart workers after this many requests
max-worker-lifetime = 3600  ; Restart workers after this many seconds
reload-on-rss = 2048        ; Restart workers after this much resident memory
worker-reload-mercy = 60    ; How long to wait before forcefully killing workers

; ------------ Dynamic Worker Scaling ------------

cheaper-algo = busyness              
processes = 500                      ; Maximum number of workers allowed
cheaper = 8                          ; Minimum number of workers allowed
cheaper-initial = 16                 ; Workers created at startup
cheaper-overload = 1                 ; Length of a cycle in seconds
cheaper-step = 16                    ; How many workers to spawn at a time

cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2    ; How many emergegency workers to create if there are too many requests in the queue

; ------------ Process Labeling ------------
auto-procname = true
procname-prefix = "deep-dream-maker "
